wday(this_day)
wday(this_day, lable=TRUE)
wday(this_day, lable = TRUE)
wday(this_day, label = TRUE)
this_moment <- now()
print(this_moment)
minute(this_moment)
my_date <- ymd("1989-05-17")
print(my_date)
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd(1920/1/1)
ymd("1920/1/1")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hh:mm:ss("03:22:14")
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
print(this_moment)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
deapet <- update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- update(depart, hours = 15, minutes = 50)
arrive <- update(depart + hours(15) + minutes (50))
?with_tz
arrive <- with_tz (arrive,"Asia/Hong_Kong")
print(arrive)
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(start = last_time, end = arrive)
as.period(how_long)
stopwatch()
library(readr)
getdata_2Fdata_2Fss06hid <- read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
View(getdata_2Fdata_2Fss06hid)
strsplit(getdata_2Fdata_2Fss06hid, "wgtp")
hoView(getdata_2Fdata_2Fss06hid)
getdata_2Fdata_2Fss06hid_colnames <- names(getdata_2Fdata_2Fss06hid)
getdata_2Fdata_2Fss06hid_colnames
strsplit(getdata_2Fdata_2Fss06hid_colnames, "wgtp")
strsplit(getdata_2Fdata_2Fss06hid_colnames, "wgtp")[[123]]
library(readr)
QUES2 <- read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
View(QUES2)
library(readr)
getdata_2Fdata_2FGDP <- read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 4)
View(getdata_2Fdata_2FGDP)
mean(getdata_2Fdata_2FGDP$X5)
mean(getdata_2Fdata_2FGDP$X5, na.rm = T)
colnames(getdata_2Fdata_2FGDP <- c("CountryAbrv", "Rank", "Country", "Total"))
ctrydata <- getdata_2Fdata_2FGDP
ctrydata
ctrydata$Total <- as.integer(gsub(",", "", ctrydata$Total))
mean(ctrydata$Total, na.rm = T)
ctrydata$Total <- as.integer(gsub(",", "", ctrydata$Total))
ctrydataTotal <- as.integer(gsub(",", "", ctrydata$Total))
ctrydataTotal <- as.integer(ctrydata(",", "",Total))
ctrydata <- getdata_2Fdata_2FGDP
ctrydataTotal <- as.integer(ctrydata(",", "",Total))
library(data.table)
library(dplyr)
path <- getwd()
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
file <- 'Dataset.zip'
if(!file.exists(file)) {
download.file(url,file)
}
data <- 'UCI HAR Dataset'
if(!file.exists(data)) {
unzip(file)
}
# read the subjects
dtSubjectectTrain <- data.table(read.table(file.path(path, data, 'train', 'subject_train.txt')))
dtSubjectectTest <- data.table(read.table(file.path(path, data, 'test', 'subject_test.txt')))
dtSubject <- rbind(dtSubjectectTrain, dtSubjectectTest)
names(dtSubject) <- c('Subject')
remove(dtSubjectectTrain,dtSubjectectTest)
# read the activities
dtActivityivityTrain <- data.table(read.table(file.path(path, data, 'train','Y_train.txt')))
dtActivityivityTest <- data.table(read.table(file.path(path,data,'test','Y_test.txt')))
dtActivity <- rbind(dtActivityivityTrain,dtActivityivityTest)
names(dtActivity) <- c('Activity')
remove(dtActivityivityTrain,dtActivityivityTest)
# combine the subjects and the activities
dtSubject <- cbind(dtSubject,dtActivity)
remove(dtActivity)
# read the feature data
dtTrain <- data.table(read.table(file.path(path,data,'train','X_train.txt')))
dtTest <- data.table(read.table(file.path(path,data,'test','X_test.txt')))
dt <- rbind(dtTrain,dtTest)
remove(dtTrain,dtTest)
# merge subject, activity, and feature into a single table
dt <- cbind(dtSubject,dt)
# set the key to subject/activity
setkey(dt,Subject,Activity)
remove(dtSubject)
# read each of the feature names and get only the std and mean features
dtFeatures <- data.table(read.table(file.path(path,data,'features.txt')))
names(dtFeatures) <- c('ftNum','ftName')
dtFeatures <- dtFeatures[grepl("mean\\(\\)|std\\(\\)",ftName)]
dtFeatures$ftCode <- paste('V', dtFeatures$ftNum, sep = "")
# select only the filtered features
dt <- dt[,c(key(dt), dtFeatures$ftCode),with=F]
# rename each of the columns
setnames(dt, old=dtFeatures$ftCode, new=as.character(dtFeatures$ftName))
# read the activity names
dtActivityNames <- data.table(read.table(file.path(path, data, 'activity_labels.txt')))
names(dtActivityNames) <- c('Activity','ActivityName')
dt <- merge(dt,dtActivityNames,by='Activity')
remove(dtActivityNames)
# merge in ftName
dtTidy <- dt %>% group_by(Subject, ActivityName) %>% summarise_each(funs(mean))
dtTidy$Activity <- NULL
# start separating out featName column to separate columns
names(dtTidy) <- gsub('^t', 'time', names(dtTidy))
names(dtTidy) <- gsub('^f', 'frequency', names(dtTidy))
names(dtTidy) <- gsub('Acc', 'Accelerometer', names(dtTidy))
names(dtTidy) <- gsub('Gyro','Gyroscope', names(dtTidy))
names(dtTidy) <- gsub('mean[(][)]','Mean',names(dtTidy))
names(dtTidy) <- gsub('std[(][)]','Std',names(dtTidy))
names(dtTidy) <- gsub('-','',names(dtTidy))
write.table(dtTidy, file.path(path, 'tidyData.txt'), row.names=FALSE)
View(dtTidy)
siwrl()
swirl()
swirl()
library(swirl)
ls()
rm(list=ls())
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rub(ppm)
rug(ppm)
low
high
hist(ppm, col = "green", 100)
rung(ppm)
rug(ppm)
hist(ppm, col = "green")
abline(12, 2)
abline(v=12, lwd=2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- pollution$region
reg <- table(pollution$region)
reg
barplot( reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1,))
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution$pm25), region == "west", col = "green")
hist(subset <- pollution$pm25, region == "west", col = "green")
hist(subset(pollution, region == "west"))
west <- subset(pollution, region == "west"))
west <- subset(pollution, region == "west")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(12, lwd = 2, lty = 2)
abline(v = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline (h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "Eest")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title (main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title (main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title (main = "Old Faithful Geyser data")
dev.copy(png, fileset = "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, (plot, speed, dist))
with(cars,(plot, (speed, dist))
with(cars, plot(speed, dist))
text(mean(cars$speed, max(cars$dist, "Swirl rules!")))
text(mean(cars$speed, max(cars$dist), "Swirl rules!")))
text(mean(cars$speed, max(cars$dist), "Swirl rules!"))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qgplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table  (airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
main = "Ozone and Wind in New York City"
title(main = "Ozone and Wind in New York City")
main
swirl()
library(swirl)
ls()
rm(list=ls())
swirl()
with(airquality(plot(Wind, Ozone)))
detach("package:datasets", unload = TRUE)
library(datasets, lib.loc = "C:/Program Files/R/R-4.0.2/library")
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone), main = "Ozone and Wind in New York City"))
with(airquality, plot(Wind, Ozone), main = "Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
par(length())
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = n)
plot(airquality$Wind, airquality$Ozone, type = "n")
main("Wind and Ozone in NYC")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, month = 5)
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright, pch = c(17,8), col = c("blue", "red"), legend = c("May","Other Months"))
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(readr)
household_power_consumption <- read_delim("C:/Users/themo/OneDrive/Data Science JHU/R Project Files/datasciencecoursera/Exploratory Data Analysis/exdata_data_household_power_consumption/household_power_consumption.txt",
";", escape_double = FALSE, col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")),
na = "NA", trim_ws = TRUE)
View(household_power_consumption)
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows=2075259, check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
setwd("C:/Users/themo/OneDrive/Data Science JHU/R Project Files/datasciencecoursera/Exploratory Data Analysis/exdata_data_household_power_consumption")
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows=2075259, check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
View(powerdata)
powerdatasub <- subset(data_full, Date %in% c("2/1/2007","2/2/2007"))
powerdatasub <- subset(powerdata, Date %in% c("2/1/2007","2/2/2007"))
View(powerdatasub)
summary(powerdatasub)
powerdata$Date <- as.Date(data1$Date, format="%d/%m/%Y")
powerdata$Date <- as.Date(powerdata$Date, format="%d/%m/%Y")
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows=2075259, check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdata$Date <- as.Date(powerdata$Date, format="%d/%m/%Y")
powerdatasub <- subset(powerdata, Date %in% c("2/1/2007","2/2/2007"))
hist(powerdatasub$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
hist(powerdatasub$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows=2075259, check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdata$Date <- as.Date(powerdata$Date, format="%d/%m/%Y")
powerdatasub <- subset(powerdata, Date %in% c("2/1/2007","2/2/2007"))
View(powerdatasub)
View(powerdata)
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows=2075259, check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdata$Date <- as.Date(powerdata$Date, format="%d/%m/%Y")
powerdatasub <- subset(powerdata, Date %in% c("2007-02-01","2007-02-02"))
View(powerdatasub)
View(powerdata)
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows=2075259, check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdata$Date <- as.Date(powerdata$Date, format="%Y-%m-%d")
powerdatasub <- subset(powerdata, Date %in% c("2007-02-01","2007-02-02"))
View(powerdatasub)
View(powerdata)
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows=2075259, check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("2/1/2007","2/2/2007"))
View(powerdatasub)
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows=2075259, check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("2/1/2007","2/2/2007"))
powerdatasub$Date <- as.Date(powerdata$Date, format="%d/%m/%Y")
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("2/1/2007","2/2/2007"))
powerdatasub$Date <- as.Date(powerdata$Date, format="%d/%m/%Y")
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("2/1/2007","2/2/2007"))
powerdatasub$Date <- as.Date(powerdata$Date, format="%d/%m/%Y")
hist(powerdatasub$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
View(powerdatasub)
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("1/2/2007","2/2/2007"))
hist(powerdatasub$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
par()
par(opar)
par(mfrow = c(1,4))
hist(powerdatasub$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("1/2/2007","2/2/2007"))
hist(powerdatasub$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("1/2/2007","2/2/2007"))
hist(powerdatasub$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
png("plot1.png", width=480, height=480)
dev.off()
powerdatasub$Date <- as.Date(powerdatasub$Date, format="%d/%m/%Y")
datetime <- paste(as.Date(powerdatasub$Date), powerdatasub$Time)
powerdatasub$Datetime <- as.POSIXct(datetime)
with(powerdatasub, {
plot(Global_active_power~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
})
View(powerdatasub)
png("plot2.png", width=480, height=480)
dev.off()
view(powerdatasub)
View(powerdatasub)
with(powerdatasub, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
png("plot3.png", width=480, height=480)
dev.off()
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
with(powerdatasub, {
plot(Global_active_power~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(Voltage~Datetime, type="l",
ylab="Voltage (volt)", xlab="")
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(Global_reactive_power~Datetime, type="l",
ylab="Global Rective Power (kilowatts)",xlab="")
})
png("plot4.png", width=480, height=480)
dev.off()
dev.print(png, "plot1.png", width=480, height=480)
dev.off()
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("1/2/2007","2/2/2007"))
hist(powerdatasub$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
dev.print(png, "plot1.png", width=480, height=480)
dev.off()
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows = 2075259,
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("1/2/2007","2/2/2007"))
powerdatasub$Date <- as.Date(powerdatasub$Date, format="%d/%m/%Y")
datetime <- paste(as.Date(powerdatasub$Date), powerdatasub$Time)
powerdatasub$Datetime <- as.POSIXct(datetime)
with(powerdatasub, {
plot(Global_active_power~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
})
dev.print(png, "plot2.png", width=480, height=480)
dev.off()
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows = 2075259,
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("1/2/2007","2/2/2007"))
powerdatasub$Date <- as.Date(powerdatasub$Date, format="%d/%m/%Y")
datetime <- paste(as.Date(powerdatasub$Date), powerdatasub$Time)
powerdatasub$Datetime <- as.POSIXct(datetime)
with(powerdatasub, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.print(png, "plot3.png", width=480, height=480)
dev.off()
powerdata <- read.csv("household_power_consumption.txt", header=T,
sep=';', na.strings="?",
nrows = 2075259,
check.names=F,
stringsAsFactors=F,
comment.char="", quote='\"')
powerdatasub <- subset(powerdata, Date %in% c("1/2/2007","2/2/2007"))
powerdatasub$Date <- as.Date(powerdatasub$Date, format="%d/%m/%Y")
datetime <- paste(as.Date(powerdatasub$Date), powerdatasub$Time)
powerdatasub$Datetime <- as.POSIXct(datetime)
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
with(powerdatasub, {
plot(Global_active_power~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(Voltage~Datetime, type="l",
ylab="Voltage (volt)", xlab="")
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(Global_reactive_power~Datetime, type="l",
ylab="Global Rective Power (kilowatts)",xlab="")
})
dev.print(png, "plot4.png", width=480, height=480)
dev.off()
